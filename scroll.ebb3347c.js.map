{"version":3,"sources":["scroll.js"],"names":["mainContainer","document","querySelector","dotsContainer","chartNb","sections","Array","from","querySelectorAll","dotActiveClass","scrollOffset","main","createDots","dots","activateDot","sectionsBoundingBoxes","map","section","index","dot","boundingBox","getBoundingClientRect","addEventListener","forEach","box","rect","offsetTop","scrollTop","top","bottom","classList","add","setChartNb","remove","createElement","className","appendChild","dotIndex","scrollIntoView","number","textContent"],"mappings":"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","file":"scroll.ebb3347c.js","sourceRoot":"..\\src","sourcesContent":["/**\r\n * @file This file handles the logic when scrolling to handle the dots and page number on the right sidebar\r\n * @author Team 3\r\n * @version v1.0.0\r\n */\r\n\r\n// retrieve DOM HTML elements\r\nconst mainContainer = document.querySelector('main')\r\nconst dotsContainer = document.querySelector('.dots-container')\r\nconst chartNb = document.querySelector('#chart-nb')\r\nconst sections = Array.from(document.querySelectorAll('main > section'))\r\n\r\n// variables\r\nconst dotActiveClass = 'active'\r\nconst scrollOffset = 1\r\n\r\nmain()\r\n\r\nfunction main() {\r\n  // create the dots based on the number of sections\r\n  createDots()\r\n  const dots = document.querySelectorAll('.dots-container .dot')\r\n\r\n  // set first page as default\r\n  activateDot(0)\r\n\r\n  // get the rectangle attributes (x, y, width, height, top, bottom) of each sections\r\n  const sectionsBoundingBoxes = sections.map((section, index) => {\r\n    return {\r\n      section,\r\n      dot: dots[index],\r\n      boundingBox: section.getBoundingClientRect()\r\n    }\r\n  })\r\n\r\n  // add listener to main container to update window's hash and sidebar dots\r\n  mainContainer.addEventListener('scroll', () => {\r\n    sectionsBoundingBoxes.forEach((box, index) => {\r\n      if (!box.dot) return\r\n\r\n      const rect = box.boundingBox\r\n      const offsetTop = mainContainer.scrollTop\r\n\r\n      // add active css class to the dot that matches the current page position\r\n      if (\r\n        offsetTop > rect.top - scrollOffset &&\r\n        offsetTop < rect.bottom - scrollOffset\r\n      ) {\r\n        box.dot.classList.add(dotActiveClass)\r\n        setChartNb(index + 1)\r\n      } else {\r\n        box.dot.classList.remove(dotActiveClass)\r\n      }\r\n    })\r\n  })\r\n\r\n  // handle click event when clicking on a dot to navigate to a specific sectiono\r\n  dots.forEach((dot, index) => {\r\n    dot.addEventListener('click', () => {\r\n      activateDot(index)\r\n    })\r\n  })\r\n\r\n  // dynamically create small dots based on the number/length of sections\r\n  function createDots() {\r\n    sections.forEach(() => {\r\n      const dot = document.createElement('div')\r\n      dot.className = 'dot'\r\n      dotsContainer.appendChild(dot)\r\n    })\r\n  }\r\n\r\n  // add active css class to current dot and navigate to current/specific section based on section index\r\n  function activateDot(index) {\r\n    dots.forEach((dot, dotIndex) => {\r\n      if (index === dotIndex) {\r\n        dots[index].classList.add(dotActiveClass)\r\n        setChartNb(index + 1)\r\n        sections[index].scrollIntoView()\r\n      } else {\r\n        dot.classList.remove(dotActiveClass)\r\n      }\r\n    })\r\n  }\r\n\r\n  // update page number on the bottom of right sidebar\r\n  function setChartNb(number) {\r\n    chartNb.textContent = number\r\n  }\r\n}\r\n"]}